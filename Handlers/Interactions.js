constÂ { 
 Â Â cwd, 
 Â Â env 
}Â =Â require("process"); 
constÂ {
  Perms
}Â =Â require(`${cwd()}/Validation/Permissions.js`); 
constÂ {
  bot, 
 Â owner, 
 Â guilds
}Â =Â require(`${cwd()}/Structures/data.json`);  
  
  
  
module.exportsÂ =Â async(client,Â PG,Â ascii)Â =>Â {
  constÂ TableÂ =Â newÂ ascii("slash commands"); 
 Â Â 
  constÂ ArrayofCommandsÂ =Â [];

  (await PG(`${cwd()}/Commands/Interaction/*/*.js`)).map(
    async(file) => {
      
      constÂ command =Â require(file);
      const I = file.split("/");
      Table.setHeading("file", "status");

      if (!command.name)
        return Table.addRow(I[7], "ğŸ”´failed", "missing a name");

      if (!command.description)
        return Table.addRow(I[7], "ğŸ”´failed", "missing a description");
        

      if (command.permissions)
        if (!Perms.includes(command.permissions))
        return Table.addRow(I[7], "ğŸ”´failed", "permission is missing or invalid");

      Table.addRow(I[7], "ğŸŸ¢loaded");
      client.interactions.set(command.name, command);
      ArrayofCommands.push(command);

    });

  console.log(Table.toString());
  
 Â  
 Â Â 
  client.on("ready",Â ()Â =>Â {
    tryÂ {
      constÂ guildÂ =Â client.guilds.cache.get(guilds.main);
      guild.commands.set(ArrayofCommands);
    }Â catchÂ (error)Â {
      console.error(error);
    };
  });
};